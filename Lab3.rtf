{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;\f2\fmodern\fcharset0 CourierNewPSMT;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red39\green14\blue98;\red0\green0\blue0;
\red83\green83\blue83;\red69\green46\blue92;\red52\green52\blue52;\red225\green225\blue225;\red24\green11\blue60;
}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c20784\c10980\c45882;\cssrgb\c0\c0\c0;
\cssrgb\c40000\c40000\c40000;\cssrgb\c34510\c24706\c43529;\cssrgb\c26667\c26667\c26667;\cssrgb\c90588\c90588\c90588;\cssrgb\c12549\c7059\c30196;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid603\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\margl1440\margr1440\vieww19540\viewh15460\viewkind0
\deftab720

\itap1\trowd \taflags4 \trgaph108\trleft-108 \trmarl1275 \tamarb200 \trmarr1276 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth22807\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl80 \clpadb20 \clpadr80 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\fs26\fsmilli13333 \cf2 \expnd0\expndtw0\kerning0
\

\itap2\trowd \taflags4 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth22407\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl200 \clpadb200 \clpadr200 \gaph\cellx8640
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs64 \cf3 \uc0\u8234 Lab 3 (100 pts)\uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\fs48 \cf3 \uc0\u8234 Due Tuesday, October 17 at 9:20am on Canvas
\fs64 \uc0\u8236 \
\
\pard\intbl\itap2\pardeftab720\partightenfactor0

\fs48 \cf3 \ul \ulc3 \uc0\u8234 Pair Programming Extra Credit Opportunity (5 pts)\ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs36 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Watch the video and answer the questions on this {\field{\*\fldinst{HYPERLINK "https://docs.google.com/document/d/1z1djhzG8zPOTVpQxr0YKnS58xwjzAcv1zZXVFh3r7jM/edit?usp=sharing"}}{\fldrslt \cf5 \ul \ulc5 worksheet}} (only one time per quarter).
\f0\b0\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b\fs36 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Both partners fill in, sign and date the {\field{\*\fldinst{HYPERLINK "https://docs.google.com/document/d/1KYdbv-LGAkP5k6eAzSQzg92IkuFmfFrhh3Se2oFohuc/edit?usp=sharing"}}{\fldrslt \cf5 \ul \ulc5 pair programming contract}} (once per assignment).
\f0\b0\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\ls1\ilvl0
\f1\b\fs36 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Upload the two documents along with your assignment to Canvas under Lab 3.
\f0\b0\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\ls1\ilvl0
\f1\b\fs36 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Only ONE partner submits the lab assignment on Canvas. Please make sure both your names are on it.
\f0\b0\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs64 \cf3 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\fs48 \cf3 \ul \uc0\u8234 Part 1: Implementing Your Stack and Queue (60 pts)\ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f0\b0\fs36 \cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Before you begin Part 2 of this lab, make sure that you have your Stack and Queue data structures working properly.
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\fs36 \cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Note: Your will be using the Queue class that you wrote during class time.
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f1\b\fs36 \cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Note that I would like you to add in the consts to the functions in your Stack and Queue (should these go on access functions or manipulation procedures?).
\f0\b0 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 For the Queue class instructions, see {\field{\*\fldinst{HYPERLINK "http://deanzacollegecis.jenniferparrish.net/cis22c/22c-class-schedule/qzlesson"}}{\fldrslt 
\f1\b \cf2 \cb8 \ul \ulc2 Queue Lesson}}.
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\fs36 \cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 For the Stack class instructions, see {\field{\*\fldinst{HYPERLINK "http://deanzacollegecis.jenniferparrish.net/cis22c/22c-class-schedule/stacks"}}{\fldrslt 
\f1\b \cf5 \ul \ulc5 Stack Lesson}}
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\ls2\ilvl0
\fs36 \cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 No credit if you altering your Queue.h and Stack.h class definitions from what was provided in class.\uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Make sure to test all of your functions to ensure that they are working properly in separate test files named QueueTest.cpp and StackTest.cpp (where you should call the functions inside of main). \uc0\u8236 \
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 -20 points for not testing each function fully in QueueTest.cpp and StackTest.cpp\uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \ul \uc0\u8234 Queue
\f0\b0\fs26\fsmilli13333 \cf2 \ulnone \uc0\u8236 \
\
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f2\fs36 \cf2 \uc0\u8234 #ifndef QUEUE_H_\uc0\u8236 \
\uc0\u8234 #define QUEUE_H_\uc0\u8236 \
\
\uc0\u8234 #include <iostream>\uc0\u8236 \
\uc0\u8234 #include <cstddef>\uc0\u8236 \
\uc0\u8234 #include <assert.h>\uc0\u8236 \
\uc0\u8234 using namespace std;\uc0\u8236 \
\
\uc0\u8234 template <class queuedata>\uc0\u8236 \
\uc0\u8234 class Queue\uc0\u8236 \
\uc0\u8234 \{\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0 public:\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**constructors and destructors*/\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 Queue();\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //initializes an empty queue\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: an empty queue\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 Queue(const Queue &queue);\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //initializes queue to have same elements as another queue\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: a copy of queue\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 ~Queue();\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //frees memory allocated to the queue\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: memory for queue has been freed\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**manipulation procedures*/\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 void dequeue();\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //removes an element from the front of the queue\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //precondition:size!=0\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: an element has been removed from the front of the queue\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 void enqueue(queuedata data);\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //adds an element to the end of the queue\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: an element added to the end of the queue\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**accessors*/\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 bool operator==(const Queue &queue);\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //returns whether this queue is equal to another queue\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 queuedata getFront() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //returns the element at the front of the queue\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //precondition: size != 0\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 int getSize() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //returns the size of the queue\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 bool empty() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //returns whether the queue is empty\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**additional queue operations*/\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 void print() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //prints the elements in the queue separated by a blank space to stdout\uc0\u8236 \
\
\
\uc0\u8234 \'a0\'a0\'a0 private:\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 struct Node\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 queuedata data;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Node* link;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Node(queuedata ndata) \{
\f0\fs26\fsmilli13333 \uc0\u8236 \

\f2\fs36 \uc0\u8234 data = ndata;\uc0\u8236 \
\uc0\u8234 link = NULL;
\f0\fs26\fsmilli13333 \uc0\u8236 \

\f2\fs36 \uc0\u8234 \'a0\'a0 \'a0\'a0\'a0 \'a0\'a0\'a0 \'a0\}\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \};\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 Node* front;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 Node* back;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 int size;\uc0\u8236 \
\
\uc0\u8234 \};\uc0\u8236 \
\
\uc0\u8234 #endif /* QUEUE_H_ */
\f0\fs26\fsmilli13333 \uc0\u8236 \

\f2\fs36 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \ul \uc0\u8234 Stack\ulnone \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f0\b0\fs26\fsmilli13333 \cf2 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f2\fs36 \cf2 \uc0\u8234 #ifndef Stack_H_\uc0\u8236 \
\uc0\u8234 #define Stack_H_\uc0\u8236 \
\
\uc0\u8234 #include <iostream>\uc0\u8236 \
\uc0\u8234 #include <cstddef>\uc0\u8236 \
\uc0\u8234 #include <assert.h>\uc0\u8236 \
\
\uc0\u8234 using namespace std;\uc0\u8236 \
\
\uc0\u8234 template <class stackdata>\uc0\u8236 \
\uc0\u8234 class Stack\uc0\u8236 \
\uc0\u8234 \{\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0 public:\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**constructors and destructors*/\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 Stack();\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //initializes an empty stack\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: an empty stack\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 Stack(const Stack &S);\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //initializes this stack to have same elements as S\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: a copy of stack\uc0\u8236 \
\
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 ~Stack();\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //frees memory allocated to the stack\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: memory for stack has been freed\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**manipulation procedures*/\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 void pop();\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //removes an element from the top of the stack\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //precondition: size != 0\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: an element has been removed from the top of the stack\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 void push(stackdata data);\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //adds an element to the top of the stack\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 //postcondition: an element added to the top of the stack\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 /**accessors*/\uc0\u8236 \
\
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 bool operator==(const Stack &S);\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 //returns whether this stack is equal to another stack S\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 stackdata peek() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 //returns the element at the top of the stack\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 //precondition: size != 0\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 int getSize() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 //returns the size of the stack\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 bool empty() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 //returns whether the stack is empty\uc0\u8236 \
\
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 /**additional operations*/\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 void print() const;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 //prints the elements in the stack each element separate by a blank space to stdout\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0 private:\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 struct Node \{\uc0\u8236 \
\uc0\u8234 \'a0\'a0 \'a0\'a0\'a0 \'a0\'a0\'a0 stackdata data;\uc0\u8236 \
\uc0\u8234 \'a0\'a0 \'a0\'a0\'a0 \'a0\'a0\'a0 Node* link;\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0 \'a0\'a0\'a0 \'a0\'a0\'a0 Node(stackdata ndata) \{
\f0\fs26\fsmilli13333 \uc0\u8236 \

\f2\fs36 \uc0\u8234 data = ndata;\uc0\u8236 \
\uc0\u8234 link = NULL;
\f0\fs26\fsmilli13333 \uc0\u8236 \

\f2\fs36 \uc0\u8234 \'a0\'a0\'a0 \'a0\'a0 \'a0\'a0\'a0 \'a0\} \'a0\'a0\'a0\'a0\'a0 \uc0\u8236 \
\uc0\u8234 \'a0\'a0 \'a0\'a0\'a0 \'a0\};\uc0\u8236 \
\
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 Node* top;\uc0\u8236 \
\uc0\u8234 \'a0\'a0\'a0\'a0\'a0\'a0 int size;\uc0\u8236 \
\
\uc0\u8234 \};
\f0\fs26\fsmilli13333 \uc0\u8236 \

\f2\fs36 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \ul \uc0\u8234 Part 2: Infix to Postfix Equation Converter (40 pts)\ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f0\b0\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Using exactly one stack and one queue, create a program that converts equations in infix notation (entered by the user) to postfix notation (output by the program).
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 This program should be written in a file called Postfix.cpp
\fs26\fsmilli13333 \uc0\u8236 \
\ls3\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 In Postfix notation (also known as reverse Polish notation), the mathematical operators are always placed on the right of the operands (the numbers).
\fs26\fsmilli13333 \uc0\u8236 \
\ls3\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 This form of notation eliminates the need to use parenthesis to indicate order of operations.
\fs26\fsmilli13333 \uc0\u8236 \
\ls3\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Some calculators are programmed this way or have a Polish or reverse Polish notation setting.
\fs26\fsmilli13333 \uc0\u8236 \
\ls3\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 We are more familiar with infix notation (the way most calculators are programmed to read our input).
\fs26\fsmilli13333 \uc0\u8236 \
\ls3\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 For example, check out the following equation, written in both infix and postfix notation:
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0
\cf2 \uc0\u8234 \'a0\'a0 \'a0\'a0\'a0 \'a0\'a0\'a0\'a0
\f2  
\fs36 5 + 3 * 4 / 7 //infix notation
\f0\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f2\fs36 \cf2 \uc0\u8234 \'a0\'a0 \'a0 5 3 4 * 7 / + //postfix notation
\f0\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 For more information on infix, prefix and postfix watch the video {\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=jos1Flt21is&index=19&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P"}}{\fldrslt 
\f1\b \cf6 \ul \ulc6 here}}
\fs26\fsmilli13333 \uc0\u8236 \
\ls4\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 You can also convert equations {\field{\*\fldinst{HYPERLINK "http://www.meta-calculator.com/learning-lab/how-to-build-scientific-calculator/infix-to-postifix-convertor.php"}}{\fldrslt 
\f1\b \cf5 \ul \ulc5 here}}
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \
\ul \uc0\u8234 Assumptions
\f0\b0\fs26\fsmilli13333 \cf2 \ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 For this assignment, you may assume that the user is entering each symbol and number followed by a blank space.
\fs26\fsmilli13333 \uc0\u8236 \
\ls5\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 For example, assume the user will enter\'a0 1 + 2 * 3 rather than 1+2*3\cf0 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Also, you can assume that the user will only enter integer values (no floating point values).
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\fs36 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 You can also assume no parenthesis, and that you will only be given +, -, *, and / as operations.
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \
\ul \uc0\u8234 Requirements
\f0\b0\fs26\fsmilli13333 \cf2 \ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 You must use your stack and queue classes written for part 1 above to complete this assignment
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\fs36 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 You must use exactly one stack and one queue to complete this assignment
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 You cannot add any functions or prototypes to your stack and queue class to complete this portion of the assignment or alter these classes in any way.
\fs26\fsmilli13333 \uc0\u8236 \
\ls6\ilvl0
\fs36 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Your file must be named Postfix.cpp\cf0 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \
\ul \uc0\u8234 Hints
\f0\b0\fs26\fsmilli13333 \cf2 \ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 It is recommend, though not required, that you make use of the following:
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\uc0\u8234 stringstreams (#include<sstream>)
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\tx1660\tx2160\pardeftab720\li2160\fi-2160\partightenfactor0
\ls7\ilvl2
\f1\b\fs36 \cf6 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9642 	}{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=Ils6dyVycd0"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul \uc0\u8234 Tutorial video }}
\f0\b0 \cf2 \expnd0\expndtw0\kerning0
\uc0\u8234 on stringstreams.\cf0 \uc0\u8236 \
\pard\intbl\itap2\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\uc0\u8234 An isNumeric function (write your own using ASCII!!)
\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\fs36 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 If you are not familiar with the above, you will be expected to research them for this assignment\cf0 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \
\ul \uc0\u8234 Example Output (User Input with Vary):
\f0\b0\fs26\fsmilli13333 \cf2 \ulnone \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f2\fs36 \cf2 \
\uc0\u8234 Welcome!\uc0\u8236 \
\
\uc0\u8234 Please enter an equation or "q" to quit: 5 + -7 * 8 - 10 * -2\uc0\u8236 \
\uc0\u8234 The equation in postfix notation is: 5 -7 8 * + 10 -2 * - \uc0\u8236 \
\
\uc0\u8234 Enter another equation or "q" to quit: -100 + 200 * 300\uc0\u8236 \
\uc0\u8234 The equation in postfix notation is: -100 200 300 * + \uc0\u8236 \
\
\uc0\u8234 Enter another equation or "q" to quit: 8 / 3 * -10 + 5\uc0\u8236 \
\uc0\u8234 The equation in postfix notation is: 8 3 / -10 * 5 + \uc0\u8236 \
\
\uc0\u8234 Enter another equation or "q" to quit: 4 * 6\uc0\u8236 \
\uc0\u8234 The equation in postfix notation is: 4 6 * \uc0\u8236 \
\
\uc0\u8234 Enter another equation or "q" to quit: q\uc0\u8236 \
\
\uc0\u8234 Goodbye!
\f0\fs26\fsmilli13333 \uc0\u8236 \
\pard\intbl\itap2\pardeftab720\partightenfactor0

\f1\b\fs48 \cf3 \
\ul \uc0\u8234 What to Submit:
\f0\b0\fs26\fsmilli13333 \cf2 \ulnone \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\fs36 \cf7 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Submit your Queue.h, QueueTest.cpp, Stack.h, StackTest.cpp, and Postfix.cpp to Canvas.
\fs26\fsmilli13333 \cf2 \uc0\u8236 \
\pard\intbl\itap2\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\f1\b\fs36 \cf9 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\uc0\u8234 Please do not submit as a zip file
\f0\b0 \cf7  - 5 point penalty for zip submissions.
\fs26\fsmilli13333 \cf2 \uc0\u8236 \nestcell \lastrow\nestrow
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cell \lastrow\row
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\qc\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.google.com/a/UniversalLogin?continue=http://sites.google.com/site/deanzacollegecis/cis22c/22c-class-schedule/lab3postfix&service=jotspot"}}{\fldrslt 
\f1\b\fs22 \cf6 \ul \ulc6 \uc0\u8234 Sign in}}
\fs20 \uc0\u8234 |{\field{\*\fldinst{HYPERLINK "http://deanzacollegecis.jenniferparrish.net/system/app/pages/recentChanges"}}{\fldrslt 
\f1\b\fs22 \cf6 \ul \ulc6 Recent Site Activity}}|{\field{\*\fldinst{HYPERLINK "http://sites.google.com/site/deanzacollegecis/system/app/pages/reportAbuse"}}{\fldrslt 
\f1\b\fs22 \cf6 \ul \ulc6 Report Abuse}}|{\field{\*\fldinst{HYPERLINK "javascript:;"}}{\fldrslt 
\f1\b\fs22 \cf6 \ul \ulc6 Print Page}}|Powered By
\fs22  {\field{\*\fldinst{HYPERLINK "http://sites.google.com/"}}{\fldrslt 
\f1\b \cf6 \ul \ulc6 Google Sites}}\uc0\u8236 }